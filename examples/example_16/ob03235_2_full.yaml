photometry_files:
    - {file_name: data/OB03235/OB03235_OGLE.txt, bandpass: I, plot_properties: {zorder: 10., color: red, label: "OGLE I-band"}, scale_errorbars: {factor: 1.5, minimum: 0.001}}
    - {file_name: data/OB03235/OB03235_MOA.txt, phot_fmt: flux, bad : data/OB03235/OB03235_MOA_bad.txt}
# To add satellite ephemeris:
#    - {file_name: some_K2_data.txt, phot_fmt: flux, bandpass: 'Kp', ephemerides_file: K2_ephemeris_01.dat}
# For files with time starting with 245...:
#    - {..., add_2450000: False}
fit_method: EMCEE
# Options: EMCEE, MultiNest, UltraNest.
# If fit_method is not given, EMCEE is used if starting_parameters are given;
# and MultiNest or UltraNest is used if prior_limits are given, depending on
# the combination of fitting_parameters.
# If MultiNest/UltraNest is used, this file cannot have starting_parameters,
# fit_constraints (except negative_blending_flux_sigma_mag and prior->t_E for
# UltraNest), min_values, max_values and plots->trace.
model:
    methods: 2452800. point_source 2452833. VBBL 2452845. point_source 2452860.
    default method: point_source_point_lens
    # For binary source one can specify:
    # methods source 1: ...
    # methods source 2: ...
    methods parameters:
        VBBL: {accuracy: 0.01}
    limb darkening u:
        I: 0.42
        g: 0.65
        i: 0.44
    coords: 18:05:16.35 -28:53:42.0
    # coordinates are needed only for parallax calculations
# Below you can have any combination of parameters allowed by MulensModel
fixed_parameters:
    t_0_par: 2452848.
starting_parameters:
    t_0: gauss 2452848.0 0.1
    u_0: gauss 0.13 0.01
    t_E: gauss 61.5 0.5
    rho: gauss 0.0010 0.0002
    pi_E_N: gauss 0.00 0.01
    pi_E_E: gauss 0.00 0.01
    q: log-uniform 0.001 0.01
    s: uniform 1.09 1.11
    alpha: gauss 44.0 1.0
    # It is also possible to provide a file with starting points e.g.:
    #   file: ob08092-o4_starting_file_input.txt
    #   parameters: t_0 u_0 t_E
    # See also ob08092-o4_starting_file.yaml
# prior_limits:
#     t_0: [2452847.5, 2452848.5]
#     u_0: [0.08, 0.18]
#     t_E: 58.7 64.7
#     rho: [0.0004, 0.0018]
#     pi_E_N: [-0.05, 0.05]
#     pi_E_E: [-0.05, 0.05]
#     s: [1.077, 1.125]
#     q: [0.001, 0.02]
#     alpha: [219.4, 229.4]
#     # Only MultiNest and UltraNest, cannot be given with starting_parameters
fit_constraints:
    negative_blending_flux_sigma_mag: 20.  
    #one can specify for which dataset soft constrain on blending flux should be applied: sigma dataset_label(s)
    #negative_blending_flux_sigma_mag: 20.  "OGLE I-band"  "OB03235_MOA.txt"
    #Alternative for binary source models: 
    #negative_source_1_flux_sigma_mag: 20.
    #and/or 
    #negative_source_2_flux_sigma_mag: 20.  "OGLE I-band"  "OB03235_MOA.txt"
    # Alternative sharp constraint:
    # no_negative_blending_flux: True
    #color constrains, where color=source_mag_from_dataset_k-source_mag_from_dataset_m: gauss, mu ,sigma, k, m 
    color : gauss 0.3 0.01 "OGLE I-band" "OB03235_MOA.txt" 
    #or
    #color : 
    #  - gauss 0.3 0.01 "OGLE I-band" "OB03235_MOA.txt" 
    #  - (...)
    #Alternative for binary source models: 
    #color source 1 :  gauss  0.3 0.01 "OGLE I-band" "OB03235_MOA.txt" 
    #and/or 
    #color source 2 :  gauss 0.3 0.01  "OGLE I-band" "OB03235_MOA.txt"

    #constrain on binary source flux ratio:  gauss reference_dataset_label/mean sigma (optional: selected_dataset_label(s))
    #2 sources flux ratio : gauss "OGLE I-band" 0.1  "OB03235_MOA.txt"
    #or 
    #2 sources flux ratio :
    #    - gauss "OGLE I-band" 0.1  "OB03235_MOA.txt"
    #    - gauss  0.44  0.1 

    #constrain for binary source models flux_1/flux_2 = (rho_1/rho_2)^k : gauss k sigma (optional: selected_dataset_label(s))
    #2 source flux size relation : gauss 2. 0.1

    prior:
        t_E: Mroz et al. 2017
        # Other possibility:
        # t_E: Mroz et al. 2020
        #pi_E_N: gauss 0.00 0.15
        #pi_E_E: gauss 0.00 0.15
    from file:
        - data/OB03235/OB03235_prior_pi_E_E.txt pi_E_E
        - data/OB03235/OB03235_prior_pi_E_N.txt pi_E_N

    posterior parsing:
        abs: [u_0]
        # After running EMCEE, calculate absolute values of parameters from that list.
min_values:
    t_0: 2452840.
    u_0: 0.
    t_E: 0.
    rho: 0.
    pi_E_N: -0.5
    pi_E_E: -0.5
    q: 0.
    s: 1.
    alpha: 0. 
max_values:
    t_0: 2452860.
    rho: 0.1
    pi_E_N: 0.5
    pi_E_E: 0.5
    q: 1.
    s: 2.
    alpha: 360.
fitting_parameters:
    ## EMCEE only
    n_walkers: 20
    n_steps: 4
    n_burn:  2
    progress: True
    posterior file: ob03235_2_models.npy
    posterior file fluxes: all
    # Above can be also a list of dataset indexes, e.g.,
    # posterior file fluxes: ["OGLE I-band"]
    posterior file thin: 50
    # Above is used to reduce the size of output posterior file.
    ## MultiNest only (basename, multimodal, evidence tolerance=0.5)
    # basename: out_ob08092_O4_MN-
    # multimodal: True
    # evidence tolerance: 0.5
    ## UltraNest only (log directory, derived parameter names, show_status,
    ## dlogz=0.5, frac_remain=0.01, max_num_improvement_loops=-1)
    # log directory: ultranest_outputs/
    # derived parameter names: flux_s_1 flux_b_1 flux_s_2 flux_b_2
    # show_status: True
    # dlogz: 2.
    # frac_remain: 0.5
    # max_num_improvement_loops: 0
    ## Both for MultiNest and UltraNest (number of live points)
    # n_live_points: 20
plots:
    best model:
        # You can skip the line below - the light curve will be plotted on screen.
        file: ob03235_2_model.png
        # In case you want an interactive plot made using plotly:
        interactive : ob03235_2_model.html
        time range: 2452820 2452855
        magnitude range: 19.3 16.9
        title: OB03235 plot
        model label: I-band model
        model kwargs: {'color': 'r', 'lw': 5.}
        rcParams:
        # This allows setting many matplotlib parameters, e.g.:
            font.size: 14
        legend:
        # Here are kwargs passed to plt.legend()
            ncol: 2
            # makes legend in 2 columns
            loc: lower center
            fontsize: small
        second Y scale:
        # This adds second Y axis to the right side. Only magnifications key is required.
            magnifications: optimal
            # magnifications: [2, 3, 4, 5, 6, 7, 8, 9]
            # If you want to provide magnification values but don't know what will be the range
            # of magnifications on your plot, then make a test with very small and large numbers
            # and a warning will tell you the exact range.
            # labels: [a, b, c, d, e, f, g, h]
            # The list of labels above can not be given if magnifications = "optimal"
            label: What is shown on this axis?
            color: magenta
        legend:
            fontsize: small
        add models:
            - {'limb darkening u': 'g', 'label': 'g-band model', 'color': 'slateblue'}
            - {'limb darkening u': -1.00, 'label': 'strange model', 'zorder': -10, 'linestyle': 'dashed'}
    trajectory:
        file: ob03235_2_trajectory.png
        interactive : ob03235_2_trajectory.html
        time range: 2452700 2452855
    triangle:
        file: ob03235_2_triangle.png
        shift t_0: False
    trace:
        file: ob03235_2_trace.png
other_output:
    models:
        # Value "-" in line below means that the models will be printed to screen instead of a file.
        file name: ob03235_2_all_models.txt
    yaml output:
        file name: ob03235_2_all_results.yaml
    residuals:
        # "-" below means the we don't output residuals for second file
        files: ob03235_2_res.txt -
